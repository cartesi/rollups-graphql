// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package readerclient

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type CompletionStatus string

const (
	CompletionStatusUnprocessed                CompletionStatus = "UNPROCESSED"
	CompletionStatusAccepted                   CompletionStatus = "ACCEPTED"
	CompletionStatusRejected                   CompletionStatus = "REJECTED"
	CompletionStatusException                  CompletionStatus = "EXCEPTION"
	CompletionStatusMachineHalted              CompletionStatus = "MACHINE_HALTED"
	CompletionStatusCycleLimitExceeded         CompletionStatus = "CYCLE_LIMIT_EXCEEDED"
	CompletionStatusTimeLimitExceeded          CompletionStatus = "TIME_LIMIT_EXCEEDED"
	CompletionStatusPayloadLengthLimitExceeded CompletionStatus = "PAYLOAD_LENGTH_LIMIT_EXCEEDED"
)

var AllCompletionStatus = []CompletionStatus{
	CompletionStatusUnprocessed,
	CompletionStatusAccepted,
	CompletionStatusRejected,
	CompletionStatusException,
	CompletionStatusMachineHalted,
	CompletionStatusCycleLimitExceeded,
	CompletionStatusTimeLimitExceeded,
	CompletionStatusPayloadLengthLimitExceeded,
}

// InputStatusInput includes the requested fields of the GraphQL type Input.
// The GraphQL type's documentation follows.
//
// Request submitted to the application to advance its state
type InputStatusInput struct {
	// Status of the input
	Status CompletionStatus `json:"status"`
}

// GetStatus returns InputStatusInput.Status, and is useful for accessing the field via an interface.
func (v *InputStatusInput) GetStatus() CompletionStatus { return v.Status }

// InputStatusResponse is returned by InputStatus on success.
type InputStatusResponse struct {
	// Get input based on its identifier
	Input InputStatusInput `json:"input"`
}

// GetInput returns InputStatusResponse.Input, and is useful for accessing the field via an interface.
func (v *InputStatusResponse) GetInput() InputStatusInput { return v.Input }

// StateInputsInputConnection includes the requested fields of the GraphQL type InputConnection.
// The GraphQL type's documentation follows.
//
// Pagination result
type StateInputsInputConnection struct {
	// Pagination entries returned for the current page
	Edges []StateInputsInputConnectionEdgesInputEdge `json:"edges"`
}

// GetEdges returns StateInputsInputConnection.Edges, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnection) GetEdges() []StateInputsInputConnectionEdgesInputEdge {
	return v.Edges
}

// StateInputsInputConnectionEdgesInputEdge includes the requested fields of the GraphQL type InputEdge.
// The GraphQL type's documentation follows.
//
// Pagination entry
type StateInputsInputConnectionEdgesInputEdge struct {
	// Node instance
	Node StateInputsInputConnectionEdgesInputEdgeNodeInput `json:"node"`
}

// GetNode returns StateInputsInputConnectionEdgesInputEdge.Node, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdge) GetNode() StateInputsInputConnectionEdgesInputEdgeNodeInput {
	return v.Node
}

// StateInputsInputConnectionEdgesInputEdgeNodeInput includes the requested fields of the GraphQL type Input.
// The GraphQL type's documentation follows.
//
// Request submitted to the application to advance its state
type StateInputsInputConnectionEdgesInputEdgeNodeInput struct {
	// Input index starting from genesis
	Index int `json:"index"`
	// Status of the input
	Status CompletionStatus `json:"status"`
	// Address responsible for submitting the input
	MsgSender string `json:"msgSender"`
	// Timestamp associated with the input submission, as defined by the base layer's block in which it was recorded
	Timestamp string `json:"timestamp"`
	// Number of the base layer block in which the input was recorded
	BlockNumber string `json:"blockNumber"`
	// Input payload in Ethereum hex binary format, starting with '0x'
	Payload string `json:"payload"`
	// Get notices from this particular input with support for pagination
	Notices StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnection `json:"notices"`
	// Get vouchers from this particular input with support for pagination
	Vouchers StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnection `json:"vouchers"`
	// Get reports from this particular input with support for pagination
	Reports StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnection `json:"reports"`
}

// GetIndex returns StateInputsInputConnectionEdgesInputEdgeNodeInput.Index, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInput) GetIndex() int { return v.Index }

// GetStatus returns StateInputsInputConnectionEdgesInputEdgeNodeInput.Status, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInput) GetStatus() CompletionStatus {
	return v.Status
}

// GetMsgSender returns StateInputsInputConnectionEdgesInputEdgeNodeInput.MsgSender, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInput) GetMsgSender() string { return v.MsgSender }

// GetTimestamp returns StateInputsInputConnectionEdgesInputEdgeNodeInput.Timestamp, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInput) GetTimestamp() string { return v.Timestamp }

// GetBlockNumber returns StateInputsInputConnectionEdgesInputEdgeNodeInput.BlockNumber, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInput) GetBlockNumber() string {
	return v.BlockNumber
}

// GetPayload returns StateInputsInputConnectionEdgesInputEdgeNodeInput.Payload, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInput) GetPayload() string { return v.Payload }

// GetNotices returns StateInputsInputConnectionEdgesInputEdgeNodeInput.Notices, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInput) GetNotices() StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnection {
	return v.Notices
}

// GetVouchers returns StateInputsInputConnectionEdgesInputEdgeNodeInput.Vouchers, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInput) GetVouchers() StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnection {
	return v.Vouchers
}

// GetReports returns StateInputsInputConnectionEdgesInputEdgeNodeInput.Reports, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInput) GetReports() StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnection {
	return v.Reports
}

// StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnection includes the requested fields of the GraphQL type NoticeConnection.
// The GraphQL type's documentation follows.
//
// Pagination result
type StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnection struct {
	// Pagination entries returned for the current page
	Edges []StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdge `json:"edges"`
}

// GetEdges returns StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnection.Edges, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnection) GetEdges() []StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdge {
	return v.Edges
}

// StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdge includes the requested fields of the GraphQL type NoticeEdge.
// The GraphQL type's documentation follows.
//
// Pagination entry
type StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdge struct {
	// Node instance
	Node StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNotice `json:"node"`
}

// GetNode returns StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdge.Node, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdge) GetNode() StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNotice {
	return v.Node
}

// StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNotice includes the requested fields of the GraphQL type Notice.
// The GraphQL type's documentation follows.
//
// Informational statement that can be validated in the base layer blockchain
type StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNotice struct {
	// Notice index within the context of the input that produced it
	Index int `json:"index"`
	// Notice data as a payload in Ethereum hex binary format, starting with '0x'
	Payload string `json:"payload"`
	// Proof object that allows this notice to be validated by the base layer blockchain
	Proof StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNoticeProof `json:"proof"`
}

// GetIndex returns StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNotice.Index, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNotice) GetIndex() int {
	return v.Index
}

// GetPayload returns StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNotice.Payload, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNotice) GetPayload() string {
	return v.Payload
}

// GetProof returns StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNotice.Proof, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNotice) GetProof() StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNoticeProof {
	return v.Proof
}

// StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNoticeProof includes the requested fields of the GraphQL type Proof.
// The GraphQL type's documentation follows.
//
// Data that can be used as proof to validate notices and execute vouchers on the base layer blockchain
type StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNoticeProof struct {
	OutputIndex          string   `json:"outputIndex"`
	OutputHashesSiblings []string `json:"outputHashesSiblings"`
}

// GetOutputIndex returns StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNoticeProof.OutputIndex, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNoticeProof) GetOutputIndex() string {
	return v.OutputIndex
}

// GetOutputHashesSiblings returns StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNoticeProof.OutputHashesSiblings, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputNoticesNoticeConnectionEdgesNoticeEdgeNodeNoticeProof) GetOutputHashesSiblings() []string {
	return v.OutputHashesSiblings
}

// StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnection includes the requested fields of the GraphQL type ReportConnection.
// The GraphQL type's documentation follows.
//
// Pagination result
type StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnection struct {
	// Pagination entries returned for the current page
	Edges []StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdge `json:"edges"`
}

// GetEdges returns StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnection.Edges, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnection) GetEdges() []StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdge {
	return v.Edges
}

// StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdge includes the requested fields of the GraphQL type ReportEdge.
// The GraphQL type's documentation follows.
//
// Pagination entry
type StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdge struct {
	// Node instance
	Node StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdgeNodeReport `json:"node"`
}

// GetNode returns StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdge.Node, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdge) GetNode() StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdgeNodeReport {
	return v.Node
}

// StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdgeNodeReport includes the requested fields of the GraphQL type Report.
// The GraphQL type's documentation follows.
//
// Application log or diagnostic information
type StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdgeNodeReport struct {
	// Report index within the context of the input that produced it
	Index int `json:"index"`
	// Report data as a payload in Ethereum hex binary format, starting with '0x'
	Payload string `json:"payload"`
}

// GetIndex returns StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdgeNodeReport.Index, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdgeNodeReport) GetIndex() int {
	return v.Index
}

// GetPayload returns StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdgeNodeReport.Payload, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputReportsReportConnectionEdgesReportEdgeNodeReport) GetPayload() string {
	return v.Payload
}

// StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnection includes the requested fields of the GraphQL type VoucherConnection.
// The GraphQL type's documentation follows.
//
// Pagination result
type StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnection struct {
	// Pagination entries returned for the current page
	Edges []StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdge `json:"edges"`
}

// GetEdges returns StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnection.Edges, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnection) GetEdges() []StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdge {
	return v.Edges
}

// StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdge includes the requested fields of the GraphQL type VoucherEdge.
// The GraphQL type's documentation follows.
//
// Pagination entry
type StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdge struct {
	// Node instance
	Node StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher `json:"node"`
}

// GetNode returns StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdge.Node, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdge) GetNode() StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher {
	return v.Node
}

// StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher includes the requested fields of the GraphQL type Voucher.
// The GraphQL type's documentation follows.
//
// Representation of a transaction that can be carried out on the base layer blockchain, such as a transfer of assets
type StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher struct {
	// Voucher index within the context of the input that produced it
	Index int `json:"index"`
	// Transaction payload in Ethereum hex binary format, starting with '0x'
	Payload string `json:"payload"`
	// Transaction destination address in Ethereum hex binary format (20 bytes), starting with '0x'
	Destination string `json:"destination"`
	// Proof object that allows this voucher to be validated and executed on the base layer blockchain
	Proof StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucherProof `json:"proof"`
}

// GetIndex returns StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher.Index, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher) GetIndex() int {
	return v.Index
}

// GetPayload returns StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher.Payload, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher) GetPayload() string {
	return v.Payload
}

// GetDestination returns StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher.Destination, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher) GetDestination() string {
	return v.Destination
}

// GetProof returns StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher.Proof, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucher) GetProof() StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucherProof {
	return v.Proof
}

// StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucherProof includes the requested fields of the GraphQL type Proof.
// The GraphQL type's documentation follows.
//
// Data that can be used as proof to validate notices and execute vouchers on the base layer blockchain
type StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucherProof struct {
	OutputIndex          string   `json:"outputIndex"`
	OutputHashesSiblings []string `json:"outputHashesSiblings"`
}

// GetOutputIndex returns StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucherProof.OutputIndex, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucherProof) GetOutputIndex() string {
	return v.OutputIndex
}

// GetOutputHashesSiblings returns StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucherProof.OutputHashesSiblings, and is useful for accessing the field via an interface.
func (v *StateInputsInputConnectionEdgesInputEdgeNodeInputVouchersVoucherConnectionEdgesVoucherEdgeNodeVoucherProof) GetOutputHashesSiblings() []string {
	return v.OutputHashesSiblings
}

// StateResponse is returned by State on success.
type StateResponse struct {
	// Get inputs with support for pagination
	Inputs StateInputsInputConnection `json:"inputs"`
}

// GetInputs returns StateResponse.Inputs, and is useful for accessing the field via an interface.
func (v *StateResponse) GetInputs() StateInputsInputConnection { return v.Inputs }

// __InputStatusInput is used internally by genqlient
type __InputStatusInput struct {
	Id string `json:"id"`
}

// GetId returns __InputStatusInput.Id, and is useful for accessing the field via an interface.
func (v *__InputStatusInput) GetId() string { return v.Id }

// The query executed by InputStatus.
const InputStatus_Operation = `
query InputStatus ($id: String!) {
	input(id: $id) {
		status
	}
}
`

// Get the input status.
func InputStatus(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (data_ *InputStatusResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "InputStatus",
		Query:  InputStatus_Operation,
		Variables: &__InputStatusInput{
			Id: id,
		},
	}

	data_ = &InputStatusResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}

// The query executed by State.
const State_Operation = `
query State {
	inputs {
		edges {
			node {
				index
				status
				msgSender
				timestamp
				blockNumber
				payload
				notices {
					edges {
						node {
							index
							payload
							proof {
								outputIndex
								outputHashesSiblings
							}
						}
					}
				}
				vouchers {
					edges {
						node {
							index
							payload
							destination
							proof {
								outputIndex
								outputHashesSiblings
							}
						}
					}
				}
				reports {
					edges {
						node {
							index
							payload
						}
					}
				}
			}
		}
	}
}
`

// Get the whole node state.
func State(
	ctx_ context.Context,
	client_ graphql.Client,
) (data_ *StateResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "State",
		Query:  State_Operation,
	}

	data_ = &StateResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
